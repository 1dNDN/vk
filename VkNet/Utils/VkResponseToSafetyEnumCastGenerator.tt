<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Globalization" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="VkNet" #>
<#@ import namespace="VkNet.Enums.Filters" #>
<#@ import namespace="VkNet.Enums.SafetyEnums" #>
<#@ assembly name="$(TargetPath)" #>
<#@ output extension=".cs" #>
// Autogenerated at <#= DateTime.Now.ToString(CultureInfo.InvariantCulture) #>
// DO NOT EDIT THIS FILE CAUSE ALL CHANGES WILL BE DELETED AUTOMATICALLY
using VkNet.Enums.SafetyEnums;

namespace VkNet.Utils
{
	public partial class VkResponse
	{
<#
	var safetyEnumTypes = Assembly.GetAssembly(typeof(VkApi))	// Получить сборку
		.GetTypes()												// Получить типы сборки
		.Where(
			t => t.BaseType != null								// Имеющие базовый тип
				&& t.BaseType.Name == typeof(SafetyEnum<>).Name	// равный SafetyEnum<>
				&& t.Name != typeof(MultivaluedFilter<>).Name	// и не равный MultivaluedFilter<>
		);

	foreach (var type in safetyEnumTypes.OrderBy(o => o.Name))
	{
#>

		public static implicit operator <#= type.Name #>(VkResponse response)
		{
			return response == null ? null : <#= type.Name #>.FromJson(response);
		}
<#
	}
#>
	}
}