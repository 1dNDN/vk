// Autogenerated at 03/28/2016 16:13:16
// DO NOT EDIT THIS FILE CAUSE ALL CHANGES WILL BE DELETED AUTOMATICALLY
using VkNet.Enums;

namespace VkNet.Utils
{
	public partial class VkResponse
	{

		public static implicit operator AccessPages(VkResponse response)
		{
			if (response == null) {
				return AccessPages.Leaders;
			}

			return Utilities.EnumFrom<AccessPages>(response);
		}

		public static implicit operator AddFriendStatus(VkResponse response)
		{
			if (response == null) {
				return AddFriendStatus.Unknown;
			}

			return Utilities.EnumFrom<AddFriendStatus>(response);
		}

		public static implicit operator AdminLevel(VkResponse response)
		{
			if (response == null) {
				return AdminLevel.Moderator;
			}

			return Utilities.EnumFrom<AdminLevel>(response);
		}

		public static implicit operator Attitude(VkResponse response)
		{
			if (response == null) {
				return Attitude.Unknown;
			}

			return Utilities.EnumFrom<Attitude>(response);
		}

		public static implicit operator AudioGenre(VkResponse response)
		{
			if (response == null) {
				return AudioGenre.Rock;
			}

			return Utilities.EnumFrom<AudioGenre>(response);
		}

		public static implicit operator AudioSort(VkResponse response)
		{
			if (response == null) {
				return AudioSort.AddedDate;
			}

			return Utilities.EnumFrom<AudioSort>(response);
		}

		public static implicit operator BanReason(VkResponse response)
		{
			if (response == null) {
				return BanReason.Other;
			}

			return Utilities.EnumFrom<BanReason>(response);
		}

		public static implicit operator BirthdayVisibility(VkResponse response)
		{
			if (response == null) {
				return BirthdayVisibility.Invisible;
			}

			return Utilities.EnumFrom<BirthdayVisibility>(response);
		}

		public static implicit operator ContentAccess(VkResponse response)
		{
			if (response == null) {
				return ContentAccess.Off;
			}

			return Utilities.EnumFrom<ContentAccess>(response);
		}

		public static implicit operator DeleteFriendStatus(VkResponse response)
		{
			if (response == null) {
				return DeleteFriendStatus.Unknown;
			}

			return Utilities.EnumFrom<DeleteFriendStatus>(response);
		}

		public static implicit operator DocFilter(VkResponse response)
		{
			if (response == null) {
				return DocFilter.Text;
			}

			return Utilities.EnumFrom<DocFilter>(response);
		}

		public static implicit operator FriendStatus(VkResponse response)
		{
			if (response == null) {
				return FriendStatus.NotFriend;
			}

			return Utilities.EnumFrom<FriendStatus>(response);
		}

		public static implicit operator GiftPrivacy(VkResponse response)
		{
			if (response == null) {
				return GiftPrivacy.NameHideMessageUser;
			}

			return Utilities.EnumFrom<GiftPrivacy>(response);
		}

		public static implicit operator GroupAccess(VkResponse response)
		{
			if (response == null) {
				return GroupAccess.Open;
			}

			return Utilities.EnumFrom<GroupAccess>(response);
		}

		public static implicit operator GroupPublicity(VkResponse response)
		{
			if (response == null) {
				return GroupPublicity.Public;
			}

			return Utilities.EnumFrom<GroupPublicity>(response);
		}

		public static implicit operator GroupSort(VkResponse response)
		{
			if (response == null) {
				return GroupSort.Normal;
			}

			return Utilities.EnumFrom<GroupSort>(response);
		}

		public static implicit operator GroupSubjects(VkResponse response)
		{
			if (response == null) {
				return GroupSubjects.AutoMoto;
			}

			return Utilities.EnumFrom<GroupSubjects>(response);
		}

		public static implicit operator GroupSubType(VkResponse response)
		{
			if (response == null) {
				return GroupSubType.PlaceOrSmallCompany;
			}

			return Utilities.EnumFrom<GroupSubType>(response);
		}

		public static implicit operator Iso3166(VkResponse response)
		{
			if (response == null) {
				return Iso3166.AU;
			}

			return Utilities.EnumFrom<Iso3166>(response);
		}

		public static implicit operator LeaderboardTypes(VkResponse response)
		{
			if (response == null) {
				return LeaderboardTypes.NotSupported;
			}

			return Utilities.EnumFrom<LeaderboardTypes>(response);
		}

		public static implicit operator LifeMain(VkResponse response)
		{
			if (response == null) {
				return LifeMain.Unknown;
			}

			return Utilities.EnumFrom<LifeMain>(response);
		}

		public static implicit operator MainSection(VkResponse response)
		{
			if (response == null) {
				return MainSection.NoSection;
			}

			return Utilities.EnumFrom<MainSection>(response);
		}

		public static implicit operator MaritalStatus(VkResponse response)
		{
			if (response == null) {
				return MaritalStatus.Single;
			}

			return Utilities.EnumFrom<MaritalStatus>(response);
		}

		public static implicit operator MarketCurrencyId(VkResponse response)
		{
			if (response == null) {
				return MarketCurrencyId.Rub;
			}

			return Utilities.EnumFrom<MarketCurrencyId>(response);
		}

		public static implicit operator MessageReadState(VkResponse response)
		{
			if (response == null) {
				return MessageReadState.Unreaded;
			}

			return Utilities.EnumFrom<MessageReadState>(response);
		}

		public static implicit operator MessagesFilter(VkResponse response)
		{
			if (response == null) {
				return MessagesFilter.All;
			}

			return Utilities.EnumFrom<MessagesFilter>(response);
		}

		public static implicit operator MessageType(VkResponse response)
		{
			if (response == null) {
				return MessageType.Received;
			}

			return Utilities.EnumFrom<MessageType>(response);
		}

		public static implicit operator PageAccessKind(VkResponse response)
		{
			if (response == null) {
				return PageAccessKind.OnlyAdministrators;
			}

			return Utilities.EnumFrom<PageAccessKind>(response);
		}

		public static implicit operator PeopleMain(VkResponse response)
		{
			if (response == null) {
				return PeopleMain.Unknown;
			}

			return Utilities.EnumFrom<PeopleMain>(response);
		}

		public static implicit operator PoliticalPreferences(VkResponse response)
		{
			if (response == null) {
				return PoliticalPreferences.Unknown;
			}

			return Utilities.EnumFrom<PoliticalPreferences>(response);
		}

		public static implicit operator ProductAvailability(VkResponse response)
		{
			if (response == null) {
				return ProductAvailability.Unavailable;
			}

			return Utilities.EnumFrom<ProductAvailability>(response);
		}

		public static implicit operator ProductSort(VkResponse response)
		{
			if (response == null) {
				return ProductSort.UserSort;
			}

			return Utilities.EnumFrom<ProductSort>(response);
		}

		public static implicit operator RelationType(VkResponse response)
		{
			if (response == null) {
				return RelationType.Unknown;
			}

			return Utilities.EnumFrom<RelationType>(response);
		}

		public static implicit operator ReportReason(VkResponse response)
		{
			if (response == null) {
				return ReportReason.Spam;
			}

			return Utilities.EnumFrom<ReportReason>(response);
		}

		public static implicit operator Sex(VkResponse response)
		{
			if (response == null) {
				return Sex.Unknown;
			}

			return Utilities.EnumFrom<Sex>(response);
		}

		public static implicit operator SortOrderBy(VkResponse response)
		{
			if (response == null) {
				return SortOrderBy.Desc;
			}

			return Utilities.EnumFrom<SortOrderBy>(response);
		}

		public static implicit operator UserSort(VkResponse response)
		{
			if (response == null) {
				return UserSort.ByPopularity;
			}

			return Utilities.EnumFrom<UserSort>(response);
		}

		public static implicit operator VideoSort(VkResponse response)
		{
			if (response == null) {
				return VideoSort.AddedDate;
			}

			return Utilities.EnumFrom<VideoSort>(response);
		}

		public static implicit operator VideoWidth(VkResponse response)
		{
			if (response == null) {
				return VideoWidth.Small130;
			}

			return Utilities.EnumFrom<VideoWidth>(response);
		}

		public static implicit operator VkObjectType(VkResponse response)
		{
			if (response == null) {
				return VkObjectType.User;
			}

			return Utilities.EnumFrom<VkObjectType>(response);
		}

		public static implicit operator WallContentAccess(VkResponse response)
		{
			if (response == null) {
				return WallContentAccess.Off;
			}

			return Utilities.EnumFrom<WallContentAccess>(response);
		}
	}
}