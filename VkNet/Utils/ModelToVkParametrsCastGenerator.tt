<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Globalization" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="VkNet" #>
<#@ assembly name="$(TargetPath)" #>
<#@ output extension=".cs" #>
// Autogenerated at <#= DateTime.Now.ToString(CultureInfo.InvariantCulture) #>
// DO NOT EDIT THIS FILE CAUSE ALL CHANGES WILL BE DELETED AUTOMATICALLY
using VkNet.Model.RequestParams;
using System.Collections.Generic;

namespace VkNet.Utils
{
    partial class VkParameters : Dictionary<string, string>
	{
<#
	var safetyEnumTypes = Assembly.GetAssembly(typeof(VkApi))		// Получить сборку
		.GetTypes()													// Получить типы сборки
		.Where(
			t => t.GetRuntimeMethods().Any(m => m.Name == "ToVkParameters")	// Имеющие метод "ToVkParameters"
		)
		.OrderBy(o => o.Name);
	foreach (var type in safetyEnumTypes)
	{
#>

		public static implicit operator VkParameters(<#= type.Name #> p)
		{
            return <#= type.Name #>.ToVkParameters(p);
        }
<#
	}
#>
	}
}